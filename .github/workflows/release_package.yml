name: Sync Version and Publish

on:
  push:
    tags:
      - "v*.*.*"
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release'
        required: true
        default: '0.1.0'

permissions:
  contents: write


jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Switch to main
        run: |
          git fetch origin main
          git checkout main

      # - name: Update version from tag
      #   run: |
      #     TAG_NAME=${GITHUB_REF#refs/tags/}
      #     python scripts/set_version.py $TAG_NAME

      - name: Commit version bump
        run: |
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git add pytest_htmlx/__init__.py
          git commit -m "chore: set version from $TAG_NAME" || echo "No changes to commit"
          git push origin main
      
      - name: Verify new version
        run: grep __version__ pytest_htmlx/__init__.py
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"


      - name: Install build tools
        run: |
          python -m pip install --upgrade pip
          pip install build twine

      - name: Build package
        run: |
          rm -rf dist/ build/ *.egg-info
          python -m build

      - name: Upload to TestPyPI
        env:
          TEST_PYPI_API_TOKEN: ${{ secrets.TEST_PYPI_API_TOKEN }}
        run: |
          if [ -z "$TEST_PYPI_API_TOKEN" ]; then
            echo "TEST_PYPI_API_TOKEN not set"; exit 1
          fi
          twine upload \
            --repository-url https://test.pypi.org/legacy/ \
            -u __token__ \
            -p "$TEST_PYPI_API_TOKEN" \
            dist/*

      - name: Verify install from TestPyPI
        run: |
          python -m pip install --upgrade pip
          pip install --index-url https://test.pypi.org/simple/ --no-deps pytest-htmlx
          python -c "import pytest_htmlx; print('Installed version:', pytest_htmlx.__version__)"

      # - name: Publish to PyPI
      #   if: startsWith(github.ref, 'refs/tags/v')  # only run on tags
      #   env:
      #     PYPI_API_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
      #   run: |
      #     if [ -z "$PYPI_API_TOKEN" ]; then
      #       echo "PYPI_API_TOKEN not set"; exit 1
      #     fi
      #     twine upload \
      #       -u __token__ \
      #       -p "$PYPI_API_TOKEN" \
      #       dist/*

